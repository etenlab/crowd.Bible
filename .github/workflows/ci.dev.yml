name: CI Workflow
on:
  push:
    branches: [dev]

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 'Checkout source code'
        uses: 'actions/checkout@v2'
        with:
          token: ${{ secrets.ADMIN_GITHUB_TOKEN }}

      - name: 'Automated Version Bump'
        id: version-bump
        uses: 'phips28/gh-action-bump-version@master'
        with:
          tag-prefix: 'v'
        env:
          GITHUB_TOKEN: ${{ secrets.ADMIN_GITHUB_TOKEN }}

      - name: 'Output Step'
        env:
          NEW_TAG: ${{ steps.version-bump.outputs.newTag }}
        run: echo "new tag $NEW_TAG"

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_S3_PUSHER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_S3_PUSHER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: '/dev/deploy/crowdbible/env = ENV'

      - name: store env
        run: |
          cat << EOF > .env
          ${{ env.ENV }}
          CI=false
          NODE_OPTIONS=--max-old-space-size=4096
          EOF

      - name: Load env
        uses: xom9ikk/dotenv@v2
          
      - name: npm ci --force
        run: npm ci --force

      - name: npm run build
        run: npm run build

      - uses: TimekillerTK/s3-sync-action@master
        with:
          args: --follow-symlinks --delete
        env:
          SOURCE_DIR: 'build'

  aws-env-test:
    needs: deploy
    if: ${{ needs.deploy.result == 'success' }}
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v3
        with:
          node-version: 16

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_S3_PUSHER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_S3_PUSHER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: '/dev/deploy/crowdbible/env = ENV'

      - name: store env
        run: |
          cat << EOF > .env
          ${{ env.ENV }}
          CI=false
          NODE_OPTIONS=--max-old-space-size=4096
          EOF

      - name: Load env
        uses: xom9ikk/dotenv@v2

      - name: npm ci --force
        run: npm ci --force

      - name: Install Playwright Browsers
        run: npx playwright install --with-deps

      - name: Run Playwright tests
        run: |
          npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report-for-aws-env
          path: playwright-report-for-aws-env/
          retention-days: 30
