name: Pre-Test Workflow
on:
  pull_request:
    branches: [dev]
    types: [opened, synchronize, reopened]

jobs:
  docker-env-test:
    runs-on: ubuntu-latest

    services:
      postgres:
        image: postgres:14.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: eil
        ports:
          - 5432:5432

      postgres-sso:
        image: postgres:14.5
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: example
          POSTGRES_DB: keycloak_db
        ports:
          - 5435:5432

      pgadmin:
        image: dpage/pgadmin4
        env:
          PGADMIN_DEFAULT_EMAIL: admin@etenlab.com
          PGADMIN_DEFAULT_PASSWORD: asdfasdf
        ports:
          - 8104:80
    
      keycloak:
        image: quay.io/keycloak/keycloak:latest
        env:
          KC_DB: postgres
          KC_DB_USERNAME: postgres
          KC_DB_PASSWORD: example
          KC_DB_SCHEMA: public
          KC_DB_URL_DATABASE: keycloak_db
          KC_DB_URL_HOST: postgres-sso
          KEYCLOAK_ADMIN: admin
          KEYCLOAK_ADMIN_PASSWORD: admin
        # Uncomment the line below if you want to specify JDBC parameters. The parameter below is just an example, and it shouldn't be used in production without knowledge. It is highly recommended that you read the PostgreSQL JDBC driver documentation in order to use it.
        #JDBC_PARAMS: "ssl=true"
        ports:
          - 8080:8080
    
      cpg-server:
        image: etenlab/cpg-server:latest
        env:
          DB_HOST: postgres
          DB_PORT: 5432
          DB_USERNAME: postgres
          DB_PASSWORD: example
          DB_NAME: eil
          RUN_MIGRATIONS: false
          MODE: DEV
          PORT: 80
        ports:
          - 8201:80
    
    steps:
      - name: Checkout
        uses: actions/checkout@v1

      - uses: actions/setup-node@v3
        with:
          node-version: 16
      
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_GITHUB_S3_PUSHER_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_GITHUB_S3_PUSHER_SECRET_ACCESS_KEY }}
          aws-region: us-east-2

      - uses: dkershner6/aws-ssm-getparameters-action@v1
        with:
          parameterPairs: '/dev/deploy/crowdbible/env = ENV'

      - name: store env
        run: |
          cat << EOF > .env
          ${{ env.ENV }}
          CI=true
          NODE_OPTIONS=--max-old-space-size=4096
          EOF

      - name: Load env
        uses: xom9ikk/dotenv@v2

      - name: npm ci --force
        run: npm ci --force
        
      - name: Install Playwright Browsers
        run: npx playwright install --with-deps
      
      - name: Run unit test
        run: npm run test
        
      - name: Run Playwright tests
        run: |
          npx playwright test

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: playwright-report
          path: playwright-report/
          retention-days: 30


